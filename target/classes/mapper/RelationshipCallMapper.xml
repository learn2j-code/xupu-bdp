<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dlm.bdp.mapper.RelationshipCallMapper" >
  <resultMap id="BaseResultMap" type="com.dlm.bdp.pojo.RelationshipCall" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="post_codes" property="postCodes" jdbcType="VARCHAR" />
    <result column="relation_code" property="relationCode" jdbcType="VARCHAR" />
    <result column="relation_codeCN" property="relationCodecn" jdbcType="VARCHAR" />
    <result column="generation_level_code" property="generationLevelCode" jdbcType="INTEGER" />
    <result column="generation_level" property="generationLevel" jdbcType="VARCHAR" />
    <result column="relation_type" property="relationType" jdbcType="INTEGER" />
    <result column="gender_type" property="genderType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, post_codes, relation_code, relation_codeCN, generation_level_code, generation_level, 
    relation_type, gender_type, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dlm.bdp.pojo.RelationshipCallExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from relationship_call
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from relationship_call
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from relationship_call
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dlm.bdp.pojo.RelationshipCallExample" >
    delete from relationship_call
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dlm.bdp.pojo.RelationshipCall" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into relationship_call (code, post_codes, relation_code, 
      relation_codeCN, generation_level_code, generation_level, 
      relation_type, gender_type, create_time, 
      update_time)
    values (#{code,jdbcType=VARCHAR}, #{postCodes,jdbcType=VARCHAR}, #{relationCode,jdbcType=VARCHAR}, 
      #{relationCodecn,jdbcType=VARCHAR}, #{generationLevelCode,jdbcType=INTEGER}, #{generationLevel,jdbcType=VARCHAR}, 
      #{relationType,jdbcType=INTEGER}, #{genderType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dlm.bdp.pojo.RelationshipCall" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into relationship_call
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="postCodes != null" >
        post_codes,
      </if>
      <if test="relationCode != null" >
        relation_code,
      </if>
      <if test="relationCodecn != null" >
        relation_codeCN,
      </if>
      <if test="generationLevelCode != null" >
        generation_level_code,
      </if>
      <if test="generationLevel != null" >
        generation_level,
      </if>
      <if test="relationType != null" >
        relation_type,
      </if>
      <if test="genderType != null" >
        gender_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="postCodes != null" >
        #{postCodes,jdbcType=VARCHAR},
      </if>
      <if test="relationCode != null" >
        #{relationCode,jdbcType=VARCHAR},
      </if>
      <if test="relationCodecn != null" >
        #{relationCodecn,jdbcType=VARCHAR},
      </if>
      <if test="generationLevelCode != null" >
        #{generationLevelCode,jdbcType=INTEGER},
      </if>
      <if test="generationLevel != null" >
        #{generationLevel,jdbcType=VARCHAR},
      </if>
      <if test="relationType != null" >
        #{relationType,jdbcType=INTEGER},
      </if>
      <if test="genderType != null" >
        #{genderType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dlm.bdp.pojo.RelationshipCallExample" resultType="java.lang.Integer" >
    select count(*) from relationship_call
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update relationship_call
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.postCodes != null" >
        post_codes = #{record.postCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.relationCode != null" >
        relation_code = #{record.relationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.relationCodecn != null" >
        relation_codeCN = #{record.relationCodecn,jdbcType=VARCHAR},
      </if>
      <if test="record.generationLevelCode != null" >
        generation_level_code = #{record.generationLevelCode,jdbcType=INTEGER},
      </if>
      <if test="record.generationLevel != null" >
        generation_level = #{record.generationLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.relationType != null" >
        relation_type = #{record.relationType,jdbcType=INTEGER},
      </if>
      <if test="record.genderType != null" >
        gender_type = #{record.genderType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update relationship_call
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      post_codes = #{record.postCodes,jdbcType=VARCHAR},
      relation_code = #{record.relationCode,jdbcType=VARCHAR},
      relation_codeCN = #{record.relationCodecn,jdbcType=VARCHAR},
      generation_level_code = #{record.generationLevelCode,jdbcType=INTEGER},
      generation_level = #{record.generationLevel,jdbcType=VARCHAR},
      relation_type = #{record.relationType,jdbcType=INTEGER},
      gender_type = #{record.genderType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dlm.bdp.pojo.RelationshipCall" >
    update relationship_call
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="postCodes != null" >
        post_codes = #{postCodes,jdbcType=VARCHAR},
      </if>
      <if test="relationCode != null" >
        relation_code = #{relationCode,jdbcType=VARCHAR},
      </if>
      <if test="relationCodecn != null" >
        relation_codeCN = #{relationCodecn,jdbcType=VARCHAR},
      </if>
      <if test="generationLevelCode != null" >
        generation_level_code = #{generationLevelCode,jdbcType=INTEGER},
      </if>
      <if test="generationLevel != null" >
        generation_level = #{generationLevel,jdbcType=VARCHAR},
      </if>
      <if test="relationType != null" >
        relation_type = #{relationType,jdbcType=INTEGER},
      </if>
      <if test="genderType != null" >
        gender_type = #{genderType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dlm.bdp.pojo.RelationshipCall" >
    update relationship_call
    set code = #{code,jdbcType=VARCHAR},
      post_codes = #{postCodes,jdbcType=VARCHAR},
      relation_code = #{relationCode,jdbcType=VARCHAR},
      relation_codeCN = #{relationCodecn,jdbcType=VARCHAR},
      generation_level_code = #{generationLevelCode,jdbcType=INTEGER},
      generation_level = #{generationLevel,jdbcType=VARCHAR},
      relation_type = #{relationType,jdbcType=INTEGER},
      gender_type = #{genderType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>